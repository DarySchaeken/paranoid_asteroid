March 22 2013
Start time: 5h40pm
Minute Taker: Yi Qing Xiao
Meeting Manager:  Payom Meshgin

- How to do the presentation?
- Need global project done.
- What game features need to be done and shown?

- Need to add levels
- Seperate window for menu?

- show game and menu seperatly?
- rectangular collision detection?

- Use java doc notation.
- JUnit testing.
- Screen size, and if size is fixed or not.

Allocated Tasks:
Payom: data handling by Sunday (Keys, High scores)
Daniel: Menu, library interfaces
Jad: Menu, library interfaces

Alex Coco: get a game running.
Alex: to do list for Alex Coco code
Yi Qing: learn JUnit and git hub ... Help with perfecting things with Coco








Uncut notes taken during meeting:

March 22 2013
Start time: 5h40 pm


Members Present: All

Next deliverable/demo.
Wendnesday morning 9h50

We need a working prototype.
At least a ship that moves around, shots, and things get destroyed by bullets.

Sunday, we need a global project done.

Alex will work on the bulk of the game.

Saturday Sunday, meet up to work.
Skyp to Alex Coco

Now, we need to add the levels, 
A seperate window for the menus,
Because we might not have time to put everything together for wednsday

We  just have to show the basic parts of the game work independently, and tell
them that we can put everything together later:

	**Collision dection need to be demonstratable. 
	Once you cleared a level, you can level up.
	We may try for Aliens, but only their trajectory (no shooting)
	Two players mode (alternate), maybe ... just maybe
	Saving the game state (the gamefield) for saving the game and alternate mode.
		Just a list of objects with their positions and state.
	Destruction of objects, replacing dead object with leftovers.
	Scores on screen.
	

Threads: to store all the object format.
Maybe a tracker which keeps track of the state of the game. (Seperate thread)
**Alex Coco wants rectangle collision detection.
	
Git hub: push only if functional.
use git hub to do deal with issues.


Have to do the menu system.
Tonight, payom is gonna send graphical elements.
Better make functional product first rather than concentrate on looks first.
How about control settings.

USE JAVA DOC NOTATION WHEN WRITING THE CODE.

Formal testing next weekend
JUnit for the testing.

Panels vs frames.
manage screen size that everything fits inside.
We can expand window size as we add things and adjust accordingly.

End: 6H15 pm
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@




Payom: data handling by Sunday (Keys, High scores)
Daniel: Menu, library interfaces
Jad: Menu, library interfaces

Alex Coco: get a game running.
Alex: to do list for Alex Coco code
Yi Qing: learn JUnit and git hub ... Help with perfecting things with Coco



